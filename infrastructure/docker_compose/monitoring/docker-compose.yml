name: "monitoring"

services:
  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      # - '--web.config.file=/etc/prometheus/web.yml'
    restart: unless-stopped
    networks:
      - network1

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    env_file:
      - ./grafana/.grafana.env
    command: --config=/etc/grafana/grafana.ini
    restart: always
    networks:
      - network1

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.127.0
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./opentelemetry/otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "8889:8889"  # Prometheus exporter
      # - "55679:55679" # zpages (optional, for debugging collector)
    depends_on:
      - tempo
      - prometheus
    networks:
      - network1

  tempo-init:
    image: &tempoImage grafana/tempo:latest
    container_name: tempo-init
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo_data:/var/tempo

  tempo:
    image: *tempoImage
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    volumes:
      - ./tempo/tempo.yml:/etc/tempo-config.yml
      - tempo_data:/var/tempo
    networks:
      - network1
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.25

  loki-init:
    image: &lokiImage grafana/loki:3.4.1
    container_name: loki-init
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - loki_data:/loki

  loki:
    image: *lokiImage
    container_name: loki
    ports:
      - "3100:3100"  # Loki's default port
    command: [ "-config.file=/etc/loki/loki-config.yml" ]
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml:ro
      - loki_data:/loki
    networks:
      - network1
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3100/ready" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z-cpuv1
    container_name: minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9000"
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - network1

networks:
  network1:
    name: docker_network
    external: true

volumes:
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data
  tempo_data:
    name: tempo_data
  loki_data:
    name: loki_data
  minio_data:
    name: minio_data