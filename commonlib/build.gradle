plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'maven-publish'
}

group = "${group}"
version = "${version}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

ext {
    set("springCloudVersion", "2024.0.1")
    set("openTelemetryVersion", "2.16.0")
    set("logbackAppenderVersion", "2.10.0-alpha")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.10.0"))

    implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")
    implementation("io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:2.10.0-alpha")
    implementation("io.opentelemetry:opentelemetry-api")
    implementation("io.opentelemetry:opentelemetry-sdk")
    implementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp")
    implementation("io.opentelemetry:opentelemetry-sdk-metrics")
    implementation("io.opentelemetry.instrumentation:opentelemetry-logback-mdc-1.0:2.10.0-alpha")
    implementation("io.opentelemetry:opentelemetry-extension-trace-propagators")
    implementation("io.micrometer:micrometer-tracing-bridge-otel")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = "hieunv.dev"
            artifactId = 'commonlib'
            version = "1.0.0"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

